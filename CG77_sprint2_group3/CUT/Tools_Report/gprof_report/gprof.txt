Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00        6     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator(std::_Deque_iterator<final_order, final_order&, final_order*> const&)
  0.00      0.00     0.00        4     0.00     0.00  customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&)
  0.00      0.00     0.00        3     0.00     0.00  validations::valid_length(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int)
  0.00      0.00     0.00        3     0.00     0.00  customer::~customer()
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__aligned_membuf<customer>::_M_ptr()
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__aligned_membuf<customer>::_M_addr()
  0.00      0.00     0.00        3     0.00     0.00  std::_List_node<customer>::_M_valptr()
  0.00      0.00     0.00        3     0.00     0.00  std::_List_iterator<customer>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.00     0.00        2     0.00     0.00  __gthread_active_p()
  0.00      0.00     0.00        2     0.00     0.00  customer::show_customer()
  0.00      0.00     0.00        2     0.00     0.00  customer::get_cid()
  0.00      0.00     0.00        2     0.00     0.00  customer::get_cname[abi:cxx11]()
  0.00      0.00     0.00        2     0.00     0.00  customer::get_email[abi:cxx11]()
  0.00      0.00     0.00        2     0.00     0.00  customer::get_phone[abi:cxx11]()
  0.00      0.00     0.00        2     0.00     0.00  customer::customer(customer const&)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<final_order>::new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<final_order>::~new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<final_order*>::new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<final_order*>::~new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<final_order>::allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<final_order>::~allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<final_order*>::allocator<final_order>(std::allocator<final_order> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<final_order*>::~allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<final_order*>(final_order*, final_order*)
  0.00      0.00     0.00        2     0.00     0.00  std::numeric_limits<long>::max()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<final_order, final_order&, final_order*>::_M_set_node(final_order**)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<final_order, final_order&, final_order*>::_S_buffer_size()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator()
  0.00      0.00     0.00        2     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_Node_allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::__cxx11::list<customer, std::allocator<customer> >::end()
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_List_node_header::_M_init()
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_List_node_header::_List_node_header()
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy<final_order*>(final_order*, final_order*)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy<final_order*, final_order>(final_order*, final_order*, std::allocator<final_order>&)
  0.00      0.00     0.00        2     0.00     0.00  std::operator!=(std::_List_iterator<customer> const&, std::_List_iterator<customer> const&)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11validations12valid_lengthENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
  0.00      0.00     0.00        1     0.00     0.00  file_maintenance()
  0.00      0.00     0.00        1     0.00     0.00  show_customer_list()
  0.00      0.00     0.00        1     0.00     0.00  customer_registration()
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __gthread_mutex_lock(pthread_mutex_t*)
  0.00      0.00     0.00        1     0.00     0.00  __gthread_mutex_unlock(pthread_mutex_t*)
  0.00      0.00     0.00        1     0.00     0.00  validations::valid_phone(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  customer::set_cid(long long)
  0.00      0.00     0.00        1     0.00     0.00  customer::set_pass()
  0.00      0.00     0.00        1     0.00     0.00  customer::set_cname()
  0.00      0.00     0.00        1     0.00     0.00  customer::set_email()
  0.00      0.00     0.00        1     0.00     0.00  customer::set_phone()
  0.00      0.00     0.00        1     0.00     0.00  customer::customer()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<final_order>::deallocate(final_order*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<final_order>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<order>::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<order>::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<final_order*>::deallocate(final_order**, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<final_order*>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<product> >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<product> >::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<customer> >::deallocate(std::_List_node<customer>*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<customer> >::destroy<customer>(customer*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<customer> >::allocate(unsigned long, void const*)
  0.00      0.00     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<customer> >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<customer> >::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<final_order>::_M_max_size() const
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<final_order*>::_M_max_size() const
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<customer> >::_M_max_size() const
  0.00      0.00     0.00        1     0.00     0.00  std::_List_iterator<customer>::operator*() const
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_size() const
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<customer, std::allocator<customer> >::_M_node_count() const
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<customer, std::allocator<customer> >::size() const
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<order>::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<order>::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<product> >::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<product> >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<customer> >::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<customer> >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::_Deque_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::~_Deque_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_create_nodes(final_order**, final_order**)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl_data::_Deque_impl_data()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_node()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_destroy_nodes(final_order**, final_order**)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_node(final_order*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base()
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<order*>(order*, order*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::_M_deallocate(final_order*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl_data::_Vector_impl_data()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<final_order, std::allocator<final_order> >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::_M_deallocate(order*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::_Vector_impl_data::_Vector_impl_data()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<order, std::allocator<order> >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_List_iterator<customer>::operator++()
  0.00      0.00     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::__allocated_ptr(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::~__allocated_ptr()
  0.00      0.00     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::operator=(decltype(nullptr))
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<final_order> >::deallocate(std::allocator<final_order>&, final_order*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<final_order> >::allocate(std::allocator<final_order>&, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<final_order*> >::deallocate(std::allocator<final_order*>&, final_order**, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<final_order*> >::allocate(std::allocator<final_order*>&, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<customer> > >::deallocate(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<customer> > >::destroy<customer>(std::allocator<std::_List_node<customer> >&, customer*)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<customer> > >::allocate(std::allocator<std::_List_node<customer> >&, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<customer> > >::construct<customer, customer const&>(std::allocator<std::_List_node<customer> >&, customer*, customer const&)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<final_order, std::allocator<final_order> >::_M_destroy_data(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>, std::allocator<final_order> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<final_order, std::allocator<final_order> >::_M_destroy_data_aux(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<final_order, std::allocator<final_order> >::end()
  0.00      0.00     0.00        1     0.00     0.00  std::deque<final_order, std::allocator<final_order> >::begin()
  0.00      0.00     0.00        1     0.00     0.00  std::deque<final_order, std::allocator<final_order> >::deque()
  0.00      0.00     0.00        1     0.00     0.00  std::deque<final_order, std::allocator<final_order> >::~deque()
  0.00      0.00     0.00        1     0.00     0.00  std::mutex::lock()
  0.00      0.00     0.00        1     0.00     0.00  std::mutex::unlock()
  0.00      0.00     0.00        1     0.00     0.00  std::stack<final_order, std::deque<final_order, std::allocator<final_order> > >::stack<std::deque<final_order, std::allocator<final_order> >, void>()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<final_order, std::allocator<final_order> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<order, std::allocator<order> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::_List_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::~_List_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<product, std::allocator<product> >::_M_clear()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<product, std::allocator<product> >::_List_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<product, std::allocator<product> >::~_List_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::_List_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::~_List_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_node()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_inc_size(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_put_node(std::_List_node<customer>*)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::_List_base<customer, std::allocator<customer> >::~_List_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<product, std::allocator<product> >::list()
  0.00      0.00     0.00        1     0.00     0.00  std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<customer, std::allocator<customer> >::begin()
  0.00      0.00     0.00        1     0.00     0.00  void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<customer, std::allocator<customer> >::push_back(customer const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__cxx11::list<customer, std::allocator<customer> >::list()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::_List_node<customer> >* std::__addressof<std::allocator<std::_List_node<customer> > >(std::allocator<std::_List_node<customer> >&)
  0.00      0.00     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<order*>(order*, order*)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<order*, order>(order*, order*, std::allocator<order>&)
  0.00      0.00     0.00        1     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.00     0.00        1     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.00     0.00        1     0.00     0.00  operator new(unsigned long, void*)

			Call graph


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00       1/6           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_node(final_order*) [97]
                0.00    0.00       1/6           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_node() [93]
                0.00    0.00       2/6           std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
                0.00    0.00       2/6           std::_Deque_iterator<final_order, final_order&, final_order*>::_S_buffer_size() [38]
[8]      0.0    0.00    0.00       6         std::__deque_buf_size(unsigned long) [8]
-----------------------------------------------
                0.00    0.00       1/4           std::deque<final_order, std::allocator<final_order> >::begin() [130]
                0.00    0.00       1/4           std::deque<final_order, std::allocator<final_order> >::end() [129]
                0.00    0.00       2/4           std::deque<final_order, std::allocator<final_order> >::_M_destroy_data(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>, std::allocator<final_order> const&) [127]
[9]      0.0    0.00    0.00       4         std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator(std::_Deque_iterator<final_order, final_order&, final_order*> const&) [9]
-----------------------------------------------
                0.00    0.00       1/4           void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&) [154]
                0.00    0.00       1/4           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::_List_node<customer> > >::construct<customer, customer const&>(std::allocator<std::_List_node<customer> >&, customer*, customer const&) [126]
                0.00    0.00       1/4           void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&) [72]
[10]     0.0    0.00    0.00       4         customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&) [10]
-----------------------------------------------
                0.00    0.00       1/3           customer::set_cname() [57]
                0.00    0.00       1/3           customer::set_email() [58]
                0.00    0.00       1/3           customer::set_pass() [56]
[11]     0.0    0.00    0.00       3         validations::valid_length(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) [11]
-----------------------------------------------
                0.00    0.00       1/3           customer_registration() [50]
                0.00    0.00       1/3           show_customer_list() [49]
                0.00    0.00       1/3           void __gnu_cxx::new_allocator<std::_List_node<customer> >::destroy<customer>(customer*) [70]
[12]     0.0    0.00    0.00       3         customer::~customer() [12]
-----------------------------------------------
                0.00    0.00       3/3           std::_List_node<customer>::_M_valptr() [15]
[13]     0.0    0.00    0.00       3         __gnu_cxx::__aligned_membuf<customer>::_M_ptr() [13]
                0.00    0.00       3/3           __gnu_cxx::__aligned_membuf<customer>::_M_addr() [14]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__aligned_membuf<customer>::_M_ptr() [13]
[14]     0.0    0.00    0.00       3         __gnu_cxx::__aligned_membuf<customer>::_M_addr() [14]
-----------------------------------------------
                0.00    0.00       1/3           std::_List_iterator<customer>::operator*() const [78]
                0.00    0.00       1/3           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear() [148]
                0.00    0.00       1/3           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[15]     0.0    0.00    0.00       3         std::_List_node<customer>::_M_valptr() [15]
                0.00    0.00       3/3           __gnu_cxx::__aligned_membuf<customer>::_M_ptr() [13]
-----------------------------------------------
                0.00    0.00       1/3           std::__cxx11::list<customer, std::allocator<customer> >::begin() [153]
                0.00    0.00       2/3           std::__cxx11::list<customer, std::allocator<customer> >::end() [41]
[16]     0.0    0.00    0.00       3         std::_List_iterator<customer>::_List_iterator(std::__detail::_List_node_base*) [16]
-----------------------------------------------
                0.00    0.00       1/2           __gthread_mutex_lock(pthread_mutex_t*) [52]
                0.00    0.00       1/2           __gthread_mutex_unlock(pthread_mutex_t*) [53]
[17]     0.0    0.00    0.00       2         __gthread_active_p() [17]
-----------------------------------------------
                0.00    0.00       1/2           customer_registration() [50]
                0.00    0.00       1/2           show_customer_list() [49]
[18]     0.0    0.00    0.00       2         customer::show_customer() [18]
                0.00    0.00       2/2           customer::get_cid() [19]
                0.00    0.00       2/2           customer::get_cname[abi:cxx11]() [20]
                0.00    0.00       2/2           customer::get_email[abi:cxx11]() [21]
                0.00    0.00       2/2           customer::get_phone[abi:cxx11]() [22]
-----------------------------------------------
                0.00    0.00       2/2           customer::show_customer() [18]
[19]     0.0    0.00    0.00       2         customer::get_cid() [19]
-----------------------------------------------
                0.00    0.00       2/2           customer::show_customer() [18]
[20]     0.0    0.00    0.00       2         customer::get_cname[abi:cxx11]() [20]
-----------------------------------------------
                0.00    0.00       2/2           customer::show_customer() [18]
[21]     0.0    0.00    0.00       2         customer::get_email[abi:cxx11]() [21]
-----------------------------------------------
                0.00    0.00       2/2           customer::show_customer() [18]
[22]     0.0    0.00    0.00       2         customer::get_phone[abi:cxx11]() [22]
-----------------------------------------------
                0.00    0.00       1/2           show_customer_list() [49]
                0.00    0.00       1/2           void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&) [72]
[23]     0.0    0.00    0.00       2         customer::customer(customer const&) [23]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<final_order>::allocator() [30]
[24]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<final_order>::new_allocator() [24]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<final_order>::~allocator() [31]
[25]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<final_order>::~new_allocator() [25]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<final_order*>::allocator<final_order>(std::allocator<final_order> const&) [32]
[26]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<final_order*>::new_allocator() [26]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<final_order*>::~allocator() [33]
[27]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<final_order*>::~new_allocator() [27]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const [29]
[28]     0.0    0.00    0.00       2         std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() const [28]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long) [95]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long) [90]
[29]     0.0    0.00    0.00       2         std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const [29]
                0.00    0.00       2/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() const [28]
                0.00    0.00       2/2           std::allocator<final_order*>::allocator<final_order>(std::allocator<final_order> const&) [32]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::_Vector_impl() [101]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::_Deque_impl() [88]
[30]     0.0    0.00    0.00       2         std::allocator<final_order>::allocator() [30]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<final_order>::new_allocator() [24]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::~_Vector_impl() [102]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::~_Deque_impl() [89]
[31]     0.0    0.00    0.00       2         std::allocator<final_order>::~allocator() [31]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<final_order>::~new_allocator() [25]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const [29]
[32]     0.0    0.00    0.00       2         std::allocator<final_order*>::allocator<final_order>(std::allocator<final_order> const&) [32]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<final_order*>::new_allocator() [26]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long) [95]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long) [90]
[33]     0.0    0.00    0.00       2         std::allocator<final_order*>::~allocator() [33]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<final_order*>::~new_allocator() [27]
-----------------------------------------------
                0.00    0.00       1/2           std::deque<final_order, std::allocator<final_order> >::~deque() [132]
                0.00    0.00       1/2           std::deque<final_order, std::allocator<final_order> >::_M_destroy_data_aux(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>) [128]
[34]     0.0    0.00    0.00       2         std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() [34]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<final_order*>(final_order*, final_order*) [44]
[35]     0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<final_order*>(final_order*, final_order*) [35]
-----------------------------------------------
                0.00    0.00       1/2           customer::set_cname() [57]
                0.00    0.00       1/2           customer::set_pass() [56]
[36]     0.0    0.00    0.00       2         std::numeric_limits<long>::max() [36]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
[37]     0.0    0.00    0.00       2         std::_Deque_iterator<final_order, final_order&, final_order*>::_M_set_node(final_order**) [37]
                0.00    0.00       2/2           std::_Deque_iterator<final_order, final_order&, final_order*>::_S_buffer_size() [38]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_iterator<final_order, final_order&, final_order*>::_M_set_node(final_order**) [37]
[38]     0.0    0.00    0.00       2         std::_Deque_iterator<final_order, final_order&, final_order*>::_S_buffer_size() [38]
                0.00    0.00       2/6           std::__deque_buf_size(unsigned long) [8]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl_data::_Deque_impl_data() [92]
[39]     0.0    0.00    0.00       2         std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator() [39]
-----------------------------------------------
                0.00    0.00       1/2           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear() [148]
                0.00    0.00       1/2           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[40]     0.0    0.00    0.00       2         std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_Node_allocator() [40]
-----------------------------------------------
                0.00    0.00       1/2           show_customer_list() [49]
                0.00    0.00       1/2           std::__cxx11::list<customer, std::allocator<customer> >::push_back(customer const&) [155]
[41]     0.0    0.00    0.00       2         std::__cxx11::list<customer, std::allocator<customer> >::end() [41]
                0.00    0.00       2/3           std::_List_iterator<customer>::_List_iterator(std::__detail::_List_node_base*) [16]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_List_node_header::_List_node_header() [43]
[42]     0.0    0.00    0.00       2         std::__detail::_List_node_header::_M_init() [42]
-----------------------------------------------
                0.00    0.00       1/2           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::_List_impl() [143]
                0.00    0.00       1/2           std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::_List_impl() [138]
[43]     0.0    0.00    0.00       2         std::__detail::_List_node_header::_List_node_header() [43]
                0.00    0.00       2/2           std::__detail::_List_node_header::_M_init() [42]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<final_order*, final_order>(final_order*, final_order*, std::allocator<final_order>&) [45]
[44]     0.0    0.00    0.00       2         void std::_Destroy<final_order*>(final_order*, final_order*) [44]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<final_order*>(final_order*, final_order*) [35]
-----------------------------------------------
                0.00    0.00       1/2           std::deque<final_order, std::allocator<final_order> >::_M_destroy_data_aux(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>) [128]
                0.00    0.00       1/2           std::vector<final_order, std::allocator<final_order> >::~vector() [357]
[45]     0.0    0.00    0.00       2         void std::_Destroy<final_order*, final_order>(final_order*, final_order*, std::allocator<final_order>&) [45]
                0.00    0.00       2/2           void std::_Destroy<final_order*>(final_order*, final_order*) [44]
-----------------------------------------------
                0.00    0.00       2/2           show_customer_list() [49]
[46]     0.0    0.00    0.00       2         std::operator!=(std::_List_iterator<customer> const&, std::_List_iterator<customer> const&) [46]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [490]
[47]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN11validations12valid_lengthENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii [47]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [51]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[48]     0.0    0.00    0.00       1         file_maintenance() [48]
                0.00    0.00       1/1           std::mutex::lock() [133]
                0.00    0.00       1/1           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [162]
                0.00    0.00       1/1           show_customer_list() [49]
                0.00    0.00       1/1           std::mutex::unlock() [134]
-----------------------------------------------
                0.00    0.00       1/1           file_maintenance() [48]
[49]     0.0    0.00    0.00       1         show_customer_list() [49]
                0.00    0.00       2/2           std::operator!=(std::_List_iterator<customer> const&, std::_List_iterator<customer> const&) [46]
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::begin() [153]
                0.00    0.00       1/2           std::__cxx11::list<customer, std::allocator<customer> >::end() [41]
                0.00    0.00       1/1           std::_List_iterator<customer>::operator*() const [78]
                0.00    0.00       1/2           customer::customer(customer const&) [23]
                0.00    0.00       1/2           customer::show_customer() [18]
                0.00    0.00       1/1           std::_List_iterator<customer>::operator++() [115]
                0.00    0.00       1/3           customer::~customer() [12]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[50]     0.0    0.00    0.00       1         customer_registration() [50]
                0.00    0.00       1/1           customer::customer() [60]
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::size() const [81]
                0.00    0.00       1/1           customer::set_cid(long long) [55]
                0.00    0.00       1/1           customer::set_cname() [57]
                0.00    0.00       1/1           customer::set_phone() [59]
                0.00    0.00       1/1           customer::set_email() [58]
                0.00    0.00       1/1           customer::set_pass() [56]
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::push_back(customer const&) [155]
                0.00    0.00       1/2           customer::show_customer() [18]
                0.00    0.00       1/3           customer::~customer() [12]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN11validations12valid_lengthENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii [47]
[51]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [51]
                0.00    0.00       1/1           std::vector<order, std::allocator<order> >::vector() [137]
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::list() [156]
                0.00    0.00       1/1           std::vector<final_order, std::allocator<final_order> >::vector() [136]
                0.00    0.00       1/1           std::stack<final_order, std::deque<final_order, std::allocator<final_order> > >::stack<std::deque<final_order, std::allocator<final_order> >, void>() [135]
                0.00    0.00       1/1           std::__cxx11::list<product, std::allocator<product> >::list() [151]
-----------------------------------------------
                0.00    0.00       1/1           std::mutex::lock() [133]
[52]     0.0    0.00    0.00       1         __gthread_mutex_lock(pthread_mutex_t*) [52]
                0.00    0.00       1/2           __gthread_active_p() [17]
-----------------------------------------------
                0.00    0.00       1/1           std::mutex::unlock() [134]
[53]     0.0    0.00    0.00       1         __gthread_mutex_unlock(pthread_mutex_t*) [53]
                0.00    0.00       1/2           __gthread_active_p() [17]
-----------------------------------------------
                0.00    0.00       1/1           customer::set_phone() [59]
[54]     0.0    0.00    0.00       1         validations::valid_phone(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [54]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[55]     0.0    0.00    0.00       1         customer::set_cid(long long) [55]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[56]     0.0    0.00    0.00       1         customer::set_pass() [56]
                0.00    0.00       1/2           std::numeric_limits<long>::max() [36]
                0.00    0.00       1/3           validations::valid_length(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) [11]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[57]     0.0    0.00    0.00       1         customer::set_cname() [57]
                0.00    0.00       1/2           std::numeric_limits<long>::max() [36]
                0.00    0.00       1/3           validations::valid_length(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) [11]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[58]     0.0    0.00    0.00       1         customer::set_email() [58]
                0.00    0.00       1/3           validations::valid_length(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) [11]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[59]     0.0    0.00    0.00       1         customer::set_phone() [59]
                0.00    0.00       1/1           validations::valid_phone(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [54]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[60]     0.0    0.00    0.00       1         customer::customer() [60]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order> >::deallocate(std::allocator<final_order>&, final_order*, unsigned long) [119]
[61]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<final_order>::deallocate(final_order*, unsigned long) [61]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order> >::allocate(std::allocator<final_order>&, unsigned long) [120]
[62]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<final_order>::allocate(unsigned long, void const*) [62]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order>::_M_max_size() const [75]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<order>::allocator() [82]
[63]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<order>::new_allocator() [63]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<order>::~allocator() [83]
[64]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<order>::~new_allocator() [64]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order*> >::deallocate(std::allocator<final_order*>&, final_order**, unsigned long) [121]
[65]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<final_order*>::deallocate(final_order**, unsigned long) [65]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order*> >::allocate(std::allocator<final_order*>&, unsigned long) [122]
[66]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<final_order*>::allocate(unsigned long, void const*) [66]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order*>::_M_max_size() const [76]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<product> >::allocator() [84]
[67]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<product> >::new_allocator() [67]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<product> >::~allocator() [85]
[68]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<product> >::~new_allocator() [68]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_List_node<customer> > >::deallocate(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*, unsigned long) [123]
[69]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<customer> >::deallocate(std::_List_node<customer>*, unsigned long) [69]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::_List_node<customer> > >::destroy<customer>(std::allocator<std::_List_node<customer> >&, customer*) [124]
[70]     0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<std::_List_node<customer> >::destroy<customer>(customer*) [70]
                0.00    0.00       1/3           customer::~customer() [12]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_List_node<customer> > >::allocate(std::allocator<std::_List_node<customer> >&, unsigned long) [125]
[71]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<customer> >::allocate(unsigned long, void const*) [71]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<customer> >::_M_max_size() const [77]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::_List_node<customer> > >::construct<customer, customer const&>(std::allocator<std::_List_node<customer> >&, customer*, customer const&) [126]
[72]     0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&) [72]
                0.00    0.00       1/4           customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&) [10]
                0.00    0.00       1/1           operator new(unsigned long, void*) [163]
                0.00    0.00       1/2           customer::customer(customer const&) [23]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<customer> >::allocator() [86]
[73]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<customer> >::new_allocator() [73]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_List_node<customer> >::~allocator() [87]
[74]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<customer> >::~new_allocator() [74]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order>::allocate(unsigned long, void const*) [62]
[75]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<final_order>::_M_max_size() const [75]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order*>::allocate(unsigned long, void const*) [66]
[76]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<final_order*>::_M_max_size() const [76]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<customer> >::allocate(unsigned long, void const*) [71]
[77]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_List_node<customer> >::_M_max_size() const [77]
-----------------------------------------------
                0.00    0.00       1/1           show_customer_list() [49]
[78]     0.0    0.00    0.00       1         std::_List_iterator<customer>::operator*() const [78]
                0.00    0.00       1/3           std::_List_node<customer>::_M_valptr() [15]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::_M_node_count() const [80]
[79]     0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_size() const [79]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::size() const [81]
[80]     0.0    0.00    0.00       1         std::__cxx11::list<customer, std::allocator<customer> >::_M_node_count() const [80]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_size() const [79]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[81]     0.0    0.00    0.00       1         std::__cxx11::list<customer, std::allocator<customer> >::size() const [81]
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::_M_node_count() const [80]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_impl::_Vector_impl() [108]
[82]     0.0    0.00    0.00       1         std::allocator<order>::allocator() [82]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<order>::new_allocator() [63]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_impl::~_Vector_impl() [109]
[83]     0.0    0.00    0.00       1         std::allocator<order>::~allocator() [83]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<order>::~new_allocator() [64]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::_List_impl() [138]
[84]     0.0    0.00    0.00       1         std::allocator<std::_List_node<product> >::allocator() [84]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<product> >::new_allocator() [67]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::~_List_impl() [139]
[85]     0.0    0.00    0.00       1         std::allocator<std::_List_node<product> >::~allocator() [85]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<product> >::~new_allocator() [68]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::_List_impl() [143]
[86]     0.0    0.00    0.00       1         std::allocator<std::_List_node<customer> >::allocator() [86]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<customer> >::new_allocator() [73]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::~_List_impl() [144]
[87]     0.0    0.00    0.00       1         std::allocator<std::_List_node<customer> >::~allocator() [87]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<customer> >::~new_allocator() [74]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_base() [98]
[88]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::_Deque_impl() [88]
                0.00    0.00       1/2           std::allocator<final_order>::allocator() [30]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl_data::_Deque_impl_data() [92]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base() [99]
[89]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::~_Deque_impl() [89]
                0.00    0.00       1/2           std::allocator<final_order>::~allocator() [31]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
[90]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long) [90]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const [29]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order*> >::allocate(std::allocator<final_order*>&, unsigned long) [122]
                0.00    0.00       1/2           std::allocator<final_order*>::~allocator() [33]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
[91]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_create_nodes(final_order**, final_order**) [91]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_node() [93]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::_Deque_impl() [88]
[92]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl_data::_Deque_impl_data() [92]
                0.00    0.00       2/2           std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator() [39]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_create_nodes(final_order**, final_order**) [91]
[93]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_node() [93]
                0.00    0.00       1/6           std::__deque_buf_size(unsigned long) [8]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order> >::allocate(std::allocator<final_order>&, unsigned long) [120]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base() [99]
[94]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_destroy_nodes(final_order**, final_order**) [94]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_node(final_order*) [97]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base() [99]
[95]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long) [95]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const [29]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order*> >::deallocate(std::allocator<final_order*>&, final_order**, unsigned long) [121]
                0.00    0.00       1/2           std::allocator<final_order*>::~allocator() [33]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_base() [98]
[96]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
                0.00    0.00       2/6           std::__deque_buf_size(unsigned long) [8]
                0.00    0.00       2/2           std::_Deque_iterator<final_order, final_order&, final_order*>::_M_set_node(final_order**) [37]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [158]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long) [90]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_create_nodes(final_order**, final_order**) [91]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_destroy_nodes(final_order**, final_order**) [94]
[97]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_node(final_order*) [97]
                0.00    0.00       1/6           std::__deque_buf_size(unsigned long) [8]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<final_order> >::deallocate(std::allocator<final_order>&, final_order*, unsigned long) [119]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::deque() [131]
[98]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_base() [98]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::_Deque_impl() [88]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::~deque() [132]
[99]     0.0    0.00    0.00       1         std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base() [99]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_destroy_nodes(final_order**, final_order**) [94]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long) [95]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::~_Deque_impl() [89]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<order*>(order*, order*) [159]
[100]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<order*>(order*, order*) [100]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_base() [106]
[101]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::_Vector_impl() [101]
                0.00    0.00       1/2           std::allocator<final_order>::allocator() [30]
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl_data::_Vector_impl_data() [104]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::~_Vector_base() [107]
[102]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::~_Vector_impl() [102]
                0.00    0.00       1/2           std::allocator<final_order>::~allocator() [31]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::~_Vector_base() [107]
[103]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::_M_deallocate(final_order*, unsigned long) [103]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::_Vector_impl() [101]
[104]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl_data::_Vector_impl_data() [104]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<final_order, std::allocator<final_order> >::~vector() [357]
[105]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() [105]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<final_order, std::allocator<final_order> >::vector() [136]
[106]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_base() [106]
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::_Vector_impl() [101]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<final_order, std::allocator<final_order> >::~vector() [357]
[107]    0.0    0.00    0.00       1         std::_Vector_base<final_order, std::allocator<final_order> >::~_Vector_base() [107]
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::~_Vector_impl() [102]
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_M_deallocate(final_order*, unsigned long) [103]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_base() [113]
[108]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::_Vector_impl::_Vector_impl() [108]
                0.00    0.00       1/1           std::allocator<order>::allocator() [82]
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_impl_data::_Vector_impl_data() [111]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::~_Vector_base() [114]
[109]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::_Vector_impl::~_Vector_impl() [109]
                0.00    0.00       1/1           std::allocator<order>::~allocator() [83]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::~_Vector_base() [114]
[110]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::_M_deallocate(order*, unsigned long) [110]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_impl::_Vector_impl() [108]
[111]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::_Vector_impl_data::_Vector_impl_data() [111]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<order, std::allocator<order> >::~vector() [374]
[112]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::_M_get_Tp_allocator() [112]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<order, std::allocator<order> >::vector() [137]
[113]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::_Vector_base() [113]
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_impl::_Vector_impl() [108]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<order, std::allocator<order> >::~vector() [374]
[114]    0.0    0.00    0.00       1         std::_Vector_base<order, std::allocator<order> >::~_Vector_base() [114]
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_impl::~_Vector_impl() [109]
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_M_deallocate(order*, unsigned long) [110]
-----------------------------------------------
                0.00    0.00       1/1           show_customer_list() [49]
[115]    0.0    0.00    0.00       1         std::_List_iterator<customer>::operator++() [115]
-----------------------------------------------
                0.00    0.00       1/1           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[116]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::__allocated_ptr(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*) [116]
                0.00    0.00       1/1           std::allocator<std::_List_node<customer> >* std::__addressof<std::allocator<std::_List_node<customer> > >(std::allocator<std::_List_node<customer> >&) [157]
-----------------------------------------------
                0.00    0.00       1/1           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[117]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::~__allocated_ptr() [117]
-----------------------------------------------
                0.00    0.00       1/1           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[118]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::operator=(decltype(nullptr)) [118]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_node(final_order*) [97]
[119]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<final_order> >::deallocate(std::allocator<final_order>&, final_order*, unsigned long) [119]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order>::deallocate(final_order*, unsigned long) [61]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_node() [93]
[120]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<final_order> >::allocate(std::allocator<final_order>&, unsigned long) [120]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order>::allocate(unsigned long, void const*) [62]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long) [95]
[121]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<final_order*> >::deallocate(std::allocator<final_order*>&, final_order**, unsigned long) [121]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order*>::deallocate(final_order**, unsigned long) [65]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long) [90]
[122]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<final_order*> >::allocate(std::allocator<final_order*>&, unsigned long) [122]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<final_order*>::allocate(unsigned long, void const*) [66]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_put_node(std::_List_node<customer>*) [147]
[123]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::_List_node<customer> > >::deallocate(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*, unsigned long) [123]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<customer> >::deallocate(std::_List_node<customer>*, unsigned long) [69]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear() [148]
[124]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::_List_node<customer> > >::destroy<customer>(std::allocator<std::_List_node<customer> >&, customer*) [124]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<std::_List_node<customer> >::destroy<customer>(customer*) [70]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_node() [145]
[125]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::_List_node<customer> > >::allocate(std::allocator<std::_List_node<customer> >&, unsigned long) [125]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_List_node<customer> >::allocate(unsigned long, void const*) [71]
-----------------------------------------------
                0.00    0.00       1/1           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[126]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<std::_List_node<customer> > >::construct<customer, customer const&>(std::allocator<std::_List_node<customer> >&, customer*, customer const&) [126]
                0.00    0.00       1/4           customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&) [10]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&) [72]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::~deque() [132]
[127]    0.0    0.00    0.00       1         std::deque<final_order, std::allocator<final_order> >::_M_destroy_data(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>, std::allocator<final_order> const&) [127]
                0.00    0.00       2/4           std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator(std::_Deque_iterator<final_order, final_order&, final_order*> const&) [9]
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::_M_destroy_data_aux(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>) [128]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::_M_destroy_data(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>, std::allocator<final_order> const&) [127]
[128]    0.0    0.00    0.00       1         std::deque<final_order, std::allocator<final_order> >::_M_destroy_data_aux(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>) [128]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() [34]
                0.00    0.00       1/2           void std::_Destroy<final_order*, final_order>(final_order*, final_order*, std::allocator<final_order>&) [45]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::~deque() [132]
[129]    0.0    0.00    0.00       1         std::deque<final_order, std::allocator<final_order> >::end() [129]
                0.00    0.00       1/4           std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator(std::_Deque_iterator<final_order, final_order&, final_order*> const&) [9]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::~deque() [132]
[130]    0.0    0.00    0.00       1         std::deque<final_order, std::allocator<final_order> >::begin() [130]
                0.00    0.00       1/4           std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator(std::_Deque_iterator<final_order, final_order&, final_order*> const&) [9]
-----------------------------------------------
                0.00    0.00       1/1           std::stack<final_order, std::deque<final_order, std::allocator<final_order> > >::stack<std::deque<final_order, std::allocator<final_order> >, void>() [135]
[131]    0.0    0.00    0.00       1         std::deque<final_order, std::allocator<final_order> >::deque() [131]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_base() [98]
-----------------------------------------------
                0.00    0.00       1/1           std::stack<final_order, std::deque<final_order, std::allocator<final_order> > >::~stack() [347]
[132]    0.0    0.00    0.00       1         std::deque<final_order, std::allocator<final_order> >::~deque() [132]
                0.00    0.00       1/2           std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() [34]
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::end() [129]
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::begin() [130]
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::_M_destroy_data(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>, std::allocator<final_order> const&) [127]
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base() [99]
-----------------------------------------------
                0.00    0.00       1/1           file_maintenance() [48]
[133]    0.0    0.00    0.00       1         std::mutex::lock() [133]
                0.00    0.00       1/1           __gthread_mutex_lock(pthread_mutex_t*) [52]
-----------------------------------------------
                0.00    0.00       1/1           file_maintenance() [48]
[134]    0.0    0.00    0.00       1         std::mutex::unlock() [134]
                0.00    0.00       1/1           __gthread_mutex_unlock(pthread_mutex_t*) [53]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [51]
[135]    0.0    0.00    0.00       1         std::stack<final_order, std::deque<final_order, std::allocator<final_order> > >::stack<std::deque<final_order, std::allocator<final_order> >, void>() [135]
                0.00    0.00       1/1           std::deque<final_order, std::allocator<final_order> >::deque() [131]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [51]
[136]    0.0    0.00    0.00       1         std::vector<final_order, std::allocator<final_order> >::vector() [136]
                0.00    0.00       1/1           std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_base() [106]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [51]
[137]    0.0    0.00    0.00       1         std::vector<order, std::allocator<order> >::vector() [137]
                0.00    0.00       1/1           std::_Vector_base<order, std::allocator<order> >::_Vector_base() [113]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_List_base() [141]
[138]    0.0    0.00    0.00       1         std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::_List_impl() [138]
                0.00    0.00       1/1           std::allocator<std::_List_node<product> >::allocator() [84]
                0.00    0.00       1/2           std::__detail::_List_node_header::_List_node_header() [43]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::~_List_base() [142]
[139]    0.0    0.00    0.00       1         std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::~_List_impl() [139]
                0.00    0.00       1/1           std::allocator<std::_List_node<product> >::~allocator() [85]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::~_List_base() [142]
[140]    0.0    0.00    0.00       1         std::__cxx11::_List_base<product, std::allocator<product> >::_M_clear() [140]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<product, std::allocator<product> >::list() [151]
[141]    0.0    0.00    0.00       1         std::__cxx11::_List_base<product, std::allocator<product> >::_List_base() [141]
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::_List_impl() [138]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<product, std::allocator<product> >::~list() [390]
[142]    0.0    0.00    0.00       1         std::__cxx11::_List_base<product, std::allocator<product> >::~_List_base() [142]
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_M_clear() [140]
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::~_List_impl() [139]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_base() [149]
[143]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::_List_impl() [143]
                0.00    0.00       1/1           std::allocator<std::_List_node<customer> >::allocator() [86]
                0.00    0.00       1/2           std::__detail::_List_node_header::_List_node_header() [43]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::~_List_base() [150]
[144]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::~_List_impl() [144]
                0.00    0.00       1/1           std::allocator<std::_List_node<customer> >::~allocator() [87]
-----------------------------------------------
                0.00    0.00       1/1           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
[145]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_node() [145]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_List_node<customer> > >::allocate(std::allocator<std::_List_node<customer> >&, unsigned long) [125]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&) [154]
[146]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_inc_size(unsigned long) [146]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear() [148]
[147]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_put_node(std::_List_node<customer>*) [147]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_List_node<customer> > >::deallocate(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*, unsigned long) [123]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::~_List_base() [150]
[148]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear() [148]
                0.00    0.00       1/3           std::_List_node<customer>::_M_valptr() [15]
                0.00    0.00       1/2           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_Node_allocator() [40]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::_List_node<customer> > >::destroy<customer>(std::allocator<std::_List_node<customer> >&, customer*) [124]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_put_node(std::_List_node<customer>*) [147]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::list() [156]
[149]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_base() [149]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::_List_impl() [143]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::~list() [393]
[150]    0.0    0.00    0.00       1         std::__cxx11::_List_base<customer, std::allocator<customer> >::~_List_base() [150]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear() [148]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::~_List_impl() [144]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [51]
[151]    0.0    0.00    0.00       1         std::__cxx11::list<product, std::allocator<product> >::list() [151]
                0.00    0.00       1/1           std::__cxx11::_List_base<product, std::allocator<product> >::_List_base() [141]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&) [154]
[152]    0.0    0.00    0.00       1         std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_node() [145]
                0.00    0.00       1/2           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_Node_allocator() [40]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::__allocated_ptr(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*) [116]
                0.00    0.00       1/4           customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&) [10]
                0.00    0.00       1/3           std::_List_node<customer>::_M_valptr() [15]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<std::_List_node<customer> > >::construct<customer, customer const&>(std::allocator<std::_List_node<customer> >&, customer*, customer const&) [126]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::operator=(decltype(nullptr)) [118]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::~__allocated_ptr() [117]
-----------------------------------------------
                0.00    0.00       1/1           show_customer_list() [49]
[153]    0.0    0.00    0.00       1         std::__cxx11::list<customer, std::allocator<customer> >::begin() [153]
                0.00    0.00       1/3           std::_List_iterator<customer>::_List_iterator(std::__detail::_List_node_base*) [16]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::list<customer, std::allocator<customer> >::push_back(customer const&) [155]
[154]    0.0    0.00    0.00       1         void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&) [154]
                0.00    0.00       1/4           customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&) [10]
                0.00    0.00       1/1           std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&) [152]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_inc_size(unsigned long) [146]
-----------------------------------------------
                0.00    0.00       1/1           customer_registration() [50]
[155]    0.0    0.00    0.00       1         std::__cxx11::list<customer, std::allocator<customer> >::push_back(customer const&) [155]
                0.00    0.00       1/2           std::__cxx11::list<customer, std::allocator<customer> >::end() [41]
                0.00    0.00       1/1           void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&) [154]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [51]
[156]    0.0    0.00    0.00       1         std::__cxx11::list<customer, std::allocator<customer> >::list() [156]
                0.00    0.00       1/1           std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_base() [149]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::__allocated_ptr(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*) [116]
[157]    0.0    0.00    0.00       1         std::allocator<std::_List_node<customer> >* std::__addressof<std::allocator<std::_List_node<customer> > >(std::allocator<std::_List_node<customer> >&) [157]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [96]
[158]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [158]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<order*, order>(order*, order*, std::allocator<order>&) [160]
[159]    0.0    0.00    0.00       1         void std::_Destroy<order*>(order*, order*) [159]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<order*>(order*, order*) [100]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<order, std::allocator<order> >::~vector() [374]
[160]    0.0    0.00    0.00       1         void std::_Destroy<order*, order>(order*, order*, std::allocator<order>&) [160]
                0.00    0.00       1/1           void std::_Destroy<order*>(order*, order*) [159]
-----------------------------------------------
                0.00    0.00       1/1           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [162]
[161]    0.0    0.00    0.00       1         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [161]
-----------------------------------------------
                0.00    0.00       1/1           file_maintenance() [48]
[162]    0.0    0.00    0.00       1         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [162]
                0.00    0.00       1/1           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [161]
-----------------------------------------------
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&) [72]
[163]    0.0    0.00    0.00       1         operator new(unsigned long, void*) [163]
-----------------------------------------------

Index by function name

  [47] _GLOBAL__sub_I__ZN11validations12valid_lengthENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii [30] std::allocator<final_order>::allocator() [121] std::allocator_traits<std::allocator<final_order*> >::deallocate(std::allocator<final_order*>&, final_order**, unsigned long)
  [48] file_maintenance()     [31] std::allocator<final_order>::~allocator() [122] std::allocator_traits<std::allocator<final_order*> >::allocate(std::allocator<final_order*>&, unsigned long)
  [49] show_customer_list()   [82] std::allocator<order>::allocator() [123] std::allocator_traits<std::allocator<std::_List_node<customer> > >::deallocate(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*, unsigned long)
  [50] customer_registration() [83] std::allocator<order>::~allocator() [124] void std::allocator_traits<std::allocator<std::_List_node<customer> > >::destroy<customer>(std::allocator<std::_List_node<customer> >&, customer*)
  [51] __static_initialization_and_destruction_0(int, int) [32] std::allocator<final_order*>::allocator<final_order>(std::allocator<final_order> const&) [125] std::allocator_traits<std::allocator<std::_List_node<customer> > >::allocate(std::allocator<std::_List_node<customer> >&, unsigned long)
  [17] __gthread_active_p()   [33] std::allocator<final_order*>::~allocator() [126] void std::allocator_traits<std::allocator<std::_List_node<customer> > >::construct<customer, customer const&>(std::allocator<std::_List_node<customer> >&, customer*, customer const&)
  [52] __gthread_mutex_lock(pthread_mutex_t*) [84] std::allocator<std::_List_node<product> >::allocator() [127] std::deque<final_order, std::allocator<final_order> >::_M_destroy_data(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>, std::allocator<final_order> const&)
  [53] __gthread_mutex_unlock(pthread_mutex_t*) [85] std::allocator<std::_List_node<product> >::~allocator() [128] std::deque<final_order, std::allocator<final_order> >::_M_destroy_data_aux(std::_Deque_iterator<final_order, final_order&, final_order*>, std::_Deque_iterator<final_order, final_order&, final_order*>)
  [54] validations::valid_phone(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [86] std::allocator<std::_List_node<customer> >::allocator() [129] std::deque<final_order, std::allocator<final_order> >::end()
  [11] validations::valid_length(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) [87] std::allocator<std::_List_node<customer> >::~allocator() [130] std::deque<final_order, std::allocator<final_order> >::begin()
  [18] customer::show_customer() [15] std::_List_node<customer>::_M_valptr() [131] std::deque<final_order, std::allocator<final_order> >::deque()
  [19] customer::get_cid()    [88] std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::_Deque_impl() [132] std::deque<final_order, std::allocator<final_order> >::~deque()
  [55] customer::set_cid(long long) [89] std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl::~_Deque_impl() [133] std::mutex::lock()
  [56] customer::set_pass()   [90] std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_map(unsigned long) [134] std::mutex::unlock()
  [20] customer::get_cname[abi:cxx11]() [91] std::_Deque_base<final_order, std::allocator<final_order> >::_M_create_nodes(final_order**, final_order**) [135] std::stack<final_order, std::deque<final_order, std::allocator<final_order> > >::stack<std::deque<final_order, std::allocator<final_order> >, void>()
  [21] customer::get_email[abi:cxx11]() [92] std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_impl_data::_Deque_impl_data() [136] std::vector<final_order, std::allocator<final_order> >::vector()
  [22] customer::get_phone[abi:cxx11]() [93] std::_Deque_base<final_order, std::allocator<final_order> >::_M_allocate_node() [137] std::vector<order, std::allocator<order> >::vector()
  [57] customer::set_cname()  [94] std::_Deque_base<final_order, std::allocator<final_order> >::_M_destroy_nodes(final_order**, final_order**) [138] std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::_List_impl()
  [58] customer::set_email()  [95] std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_map(final_order**, unsigned long) [139] std::__cxx11::_List_base<product, std::allocator<product> >::_List_impl::~_List_impl()
  [59] customer::set_phone()  [96] std::_Deque_base<final_order, std::allocator<final_order> >::_M_initialize_map(unsigned long) [140] std::__cxx11::_List_base<product, std::allocator<product> >::_M_clear()
  [60] customer::customer()   [97] std::_Deque_base<final_order, std::allocator<final_order> >::_M_deallocate_node(final_order*) [141] std::__cxx11::_List_base<product, std::allocator<product> >::_List_base()
  [23] customer::customer(customer const&) [34] std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() [142] std::__cxx11::_List_base<product, std::allocator<product> >::~_List_base()
  [12] customer::~customer()  [98] std::_Deque_base<final_order, std::allocator<final_order> >::_Deque_base() [143] std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::_List_impl()
  [61] __gnu_cxx::new_allocator<final_order>::deallocate(final_order*, unsigned long) [99] std::_Deque_base<final_order, std::allocator<final_order> >::~_Deque_base() [144] std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_impl::~_List_impl()
  [62] __gnu_cxx::new_allocator<final_order>::allocate(unsigned long, void const*) [35] void std::_Destroy_aux<false>::__destroy<final_order*>(final_order*, final_order*) [145] std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_node()
  [24] __gnu_cxx::new_allocator<final_order>::new_allocator() [100] void std::_Destroy_aux<false>::__destroy<order*>(order*, order*) [146] std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_inc_size(unsigned long)
  [25] __gnu_cxx::new_allocator<final_order>::~new_allocator() [101] std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::_Vector_impl() [147] std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_put_node(std::_List_node<customer>*)
  [63] __gnu_cxx::new_allocator<order>::new_allocator() [102] std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl::~_Vector_impl() [40] std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_Node_allocator()
  [64] __gnu_cxx::new_allocator<order>::~new_allocator() [103] std::_Vector_base<final_order, std::allocator<final_order> >::_M_deallocate(final_order*, unsigned long) [148] std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_clear()
  [65] __gnu_cxx::new_allocator<final_order*>::deallocate(final_order**, unsigned long) [104] std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_impl_data::_Vector_impl_data() [149] std::__cxx11::_List_base<customer, std::allocator<customer> >::_List_base()
  [66] __gnu_cxx::new_allocator<final_order*>::allocate(unsigned long, void const*) [105] std::_Vector_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() [150] std::__cxx11::_List_base<customer, std::allocator<customer> >::~_List_base()
  [26] __gnu_cxx::new_allocator<final_order*>::new_allocator() [106] std::_Vector_base<final_order, std::allocator<final_order> >::_Vector_base() [151] std::__cxx11::list<product, std::allocator<product> >::list()
  [27] __gnu_cxx::new_allocator<final_order*>::~new_allocator() [107] std::_Vector_base<final_order, std::allocator<final_order> >::~_Vector_base() [152] std::_List_node<customer>* std::__cxx11::list<customer, std::allocator<customer> >::_M_create_node<customer const&>(customer const&)
  [67] __gnu_cxx::new_allocator<std::_List_node<product> >::new_allocator() [108] std::_Vector_base<order, std::allocator<order> >::_Vector_impl::_Vector_impl() [41] std::__cxx11::list<customer, std::allocator<customer> >::end()
  [68] __gnu_cxx::new_allocator<std::_List_node<product> >::~new_allocator() [109] std::_Vector_base<order, std::allocator<order> >::_Vector_impl::~_Vector_impl() [153] std::__cxx11::list<customer, std::allocator<customer> >::begin()
  [69] __gnu_cxx::new_allocator<std::_List_node<customer> >::deallocate(std::_List_node<customer>*, unsigned long) [110] std::_Vector_base<order, std::allocator<order> >::_M_deallocate(order*, unsigned long) [154] void std::__cxx11::list<customer, std::allocator<customer> >::_M_insert<customer const&>(std::_List_iterator<customer>, customer const&)
  [70] void __gnu_cxx::new_allocator<std::_List_node<customer> >::destroy<customer>(customer*) [111] std::_Vector_base<order, std::allocator<order> >::_Vector_impl_data::_Vector_impl_data() [155] std::__cxx11::list<customer, std::allocator<customer> >::push_back(customer const&)
  [71] __gnu_cxx::new_allocator<std::_List_node<customer> >::allocate(unsigned long, void const*) [112] std::_Vector_base<order, std::allocator<order> >::_M_get_Tp_allocator() [156] std::__cxx11::list<customer, std::allocator<customer> >::list()
  [72] void __gnu_cxx::new_allocator<std::_List_node<customer> >::construct<customer, customer const&>(customer*, customer const&) [113] std::_Vector_base<order, std::allocator<order> >::_Vector_base() [42] std::__detail::_List_node_header::_M_init()
  [73] __gnu_cxx::new_allocator<std::_List_node<customer> >::new_allocator() [114] std::_Vector_base<order, std::allocator<order> >::~_Vector_base() [43] std::__detail::_List_node_header::_List_node_header()
  [74] __gnu_cxx::new_allocator<std::_List_node<customer> >::~new_allocator() [16] std::_List_iterator<customer>::_List_iterator(std::__detail::_List_node_base*) [157] std::allocator<std::_List_node<customer> >* std::__addressof<std::allocator<std::_List_node<customer> > >(std::allocator<std::_List_node<customer> >&)
  [13] __gnu_cxx::__aligned_membuf<customer>::_M_ptr() [115] std::_List_iterator<customer>::operator++() [8] std::__deque_buf_size(unsigned long)
  [14] __gnu_cxx::__aligned_membuf<customer>::_M_addr() [36] std::numeric_limits<long>::max() [158] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [75] __gnu_cxx::new_allocator<final_order>::_M_max_size() const [37] std::_Deque_iterator<final_order, final_order&, final_order*>::_M_set_node(final_order**) [10] customer const& std::forward<customer const&>(std::remove_reference<customer const&>::type&)
  [76] __gnu_cxx::new_allocator<final_order*>::_M_max_size() const [38] std::_Deque_iterator<final_order, final_order&, final_order*>::_S_buffer_size() [44] void std::_Destroy<final_order*>(final_order*, final_order*)
  [77] __gnu_cxx::new_allocator<std::_List_node<customer> >::_M_max_size() const [9] std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator(std::_Deque_iterator<final_order, final_order&, final_order*> const&) [45] void std::_Destroy<final_order*, final_order>(final_order*, final_order*, std::allocator<final_order>&)
  [28] std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_Tp_allocator() const [39] std::_Deque_iterator<final_order, final_order&, final_order*>::_Deque_iterator() [159] void std::_Destroy<order*>(order*, order*)
  [29] std::_Deque_base<final_order, std::allocator<final_order> >::_M_get_map_allocator() const [116] std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::__allocated_ptr(std::allocator<std::_List_node<customer> >&, std::_List_node<customer>*) [160] void std::_Destroy<order*, order>(order*, order*, std::allocator<order>&)
  [78] std::_List_iterator<customer>::operator*() const [117] std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::~__allocated_ptr() [161] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [79] std::__cxx11::_List_base<customer, std::allocator<customer> >::_M_get_size() const [118] std::__allocated_ptr<std::allocator<std::_List_node<customer> > >::operator=(decltype(nullptr)) [162] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [80] std::__cxx11::list<customer, std::allocator<customer> >::_M_node_count() const [119] std::allocator_traits<std::allocator<final_order> >::deallocate(std::allocator<final_order>&, final_order*, unsigned long) [46] std::operator!=(std::_List_iterator<customer> const&, std::_List_iterator<customer> const&)
  [81] std::__cxx11::list<customer, std::allocator<customer> >::size() const [120] std::allocator_traits<std::allocator<final_order> >::allocate(std::allocator<final_order>&, unsigned long) [163] operator new(unsigned long, void*)
